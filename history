;; -*- mode: emacs-lisp; coding: utf-8-unix -*-
;; Minibuffer history file, automatically generated by ‘savehist’.

(setq savehist-minibuffer-history-variables '(minibuffer-history read-expression-history file-name-history irony--server-install-command-history ivy-history counsel-M-x-history swiper-history ido-file-history ido-buffer-history extended-command-history))
(setq minibuffer-history '("/bin/bash"))
(setq file-name-history '(#("/home/aleksss/example/build/" 0 28 (ivy-index 0)) "/home/aleksss/example/" "/home/aleksss/example/build" "/home/aleksss/example/CMakeLists.txt" "/home/aleksss/example/" "/home/aleksss/example/.clang_complete" "/home/aleksss/.emacs.d/settings.org" "/home/aleksss/main.cpp" "/home/aleksss/.emacs.d/init.el" "/home/aleksss/.emacs.d/settings.org" "/home/aleksss/main.cpp" "/home/aleksss/.emacs.d/init.el" "/home/aleksss/.emacs.d/settings.org" "/home/aleksss/main.cpp" "/home/aleksss/.emacs.d/init.el" "/home/aleksss/main.cpp" "/home/aleksss/.emacs.d/settings.org" "/home/aleksss/.emacs.d/init.el" "/home/aleksss/example/hw.cpp" "/home/aleksss/example/.clang_complete" "/home/aleksss/example/hw.cpp" "/home/aleksss/examples.desktop" "/home/aleksss/.emacs.d/settings.org" "/home/aleksss/example/hw.cpp" "/home/aleksss/example/.clang_complete" "/home/aleksss/example/hw.cpp" "/home/aleksss/.emacs.d/settings.org" "/home/aleksss/example/.clang_complete" "/home/aleksss/example/hw.cpp" "/home/aleksss/.emacs.d/init.el" "/home/aleksss/.emacs.d/settings.org" "/home/aleksss/example/build/.clang_complete" "/home/aleksss/example/.clang_complete" "/home/aleksss/example/hw.cpp" "/home/aleksss/.emacs.d/settings.org" "/home/aleksss/.emacs.d/init.el" "/home/aleksss/example/hw.cpp" "/home/aleksss/example/someheader.h" "/home/aleksss/example/hw.cpp" "/home/aleksss/example/CMakeLists.txt" "/home/aleksss/example/hw.cpp"))
(setq irony--server-install-command-history '("cmake -DCMAKE_INSTALL_PREFIX\\=/home/aleksss/.emacs.d/irony/  /home/aleksss/.emacs.d/elpa/irony-20190125.1234/server && cmake --build . --use-stderr --config Release --target install"))
(setq ivy-history '("hw.cpp" "CMakeLists.txt" "hw.cpp" "example" "main.cpp" "init.el" "highlight-indent-guides-autoloads.el" "main.cpp" "init.el" "main.cpp" "init.el" "main.cpp" "settings.org" "init.el" "*Packages*" "init.el" "settings.org" "main.cpp" "init.el" "main.cpp" "init.el" "class" "main.cpp" "init.el" "settings.org" "*Help*" "hw.cpp" "/usr/include/c++/7.3.0" "hw.cpp" "settings.org" "init.el" "*Packages*" "init.el" "settings.org<.emacs.d-master>" "*scratch*" "init.el" "*scratch*" "settings.org<.emacs.d-master>" "init.el" "settings.org<.emacs.d>" "(global-set-key (kbd \"<f1> l\") 'counsel-find-library)" "(global-set-key (kbd \"C-y\") 'counsel-yank-pop)" "(-setvariable)"))
(setq counsel-M-x-history '(#("^term" 0 5 (ivy-index 0)) #("^eval buf" 0 9 (ivy-index 0)) #("^customiz" 0 9 (ivy-index 0)) #("^custo" 0 6 (ivy-index 2)) #("^apro" 0 5 (ivy-index 0)) #("^eval" 0 5 (ivy-index 0)) #("^packa lis pa" 0 13 (ivy-index 0)) #("^eval bu" 0 8 (ivy-index 0)) #("^highlight i" 0 12 (ivy-index 5)) #("^c ver" 0 6 (ivy-index 0)) #("^descri mo" 0 10 (ivy-index 3)) #("^eval " 0 6 (ivy-index 0)) #("^packa list pack" 0 16 (ivy-index 0)) #("^ivy-yasn" 0 9 (ivy-index 0)) #("^ivy-ya" 0 7 (ivy-index 3)) #("^eva" 0 4 (ivy-index 0)) #("^pack list" 0 10 (ivy-index 0)) #("^company iron" 0 13 (ivy-index 2)) #("^company-iron" 0 13 (ivy-index 2)) #("^company-iro" 0 12 (ivy-index 2)) #("^irony-cdb-men" 0 14 (ivy-index 0)) #("^irony-cdb" 0 10 (ivy-index 0)) #("^iron" 0 5 (ivy-index 1)) #("^irony-" 0 7 (ivy-index 0)) #("^package-list-packages" 0 22 (ivy-index 0)) #("^company-i" 0 10 (ivy-index 4)) #("^irony-mo" 0 9 (ivy-index 0)) #("^irony-inst" 0 11 (ivy-index 0)) #("^irony-i" 0 8 (ivy-index 0)) #("irony" 0 5 (ivy-index 0)) #("^eval buffer" 0 12 (ivy-index 0)) #("^pack li pa" 0 11 (ivy-index 0)) #("^packa list pa" 0 14 (ivy-index 1)) #("^par edit m" 0 11 (ivy-index 4)) #("^pack li" 0 8 (ivy-index 1)) #("^packa lis" 0 10 (ivy-index 0)) #("^eval-buffer" 0 12 (ivy-index 0)) #("^magit-statu" 0 12 (ivy-index 0)) #("^magi" 0 5 (ivy-index 0)) #("^pack lis" 0 9 (ivy-index 0)) #("^ya" 0 3 (ivy-index 0))))
(setq swiper-history '(#("theme" 0 5 (ivy-index 207)) #("neot" 0 4 (ivy-index 0)) #("highlight in" 0 12 (ivy-index 53)) #("highlight inden" 0 15 (ivy-index 0)) #("highlight indent" 0 16 (ivy-index 2)) #("yasnip" 0 6 (ivy-index 17)) #("yasnippet" 0 9 (ivy-index 29)) #("irony" 0 5 (ivy-index 0)) #("company qui" 0 11 (ivy-index 0)) #("company" 0 7 (ivy-index 3)) #("paredit" 0 7 (ivy-index 3)) #("iedit" 0 5 (ivy-index 2)) "magit sta" #("magit" 0 5 (ivy-index 3)) "global.*" #("global key" 0 10 (ivy-index 12)) #("scrol" 0 5 (ivy-index 2)) #("lin" 0 3 (ivy-index 0)) #(" (ivy-mode 1)" 0 1 (display "86  " swiper-line-number "86  ") 1 13 (face (org-block) font-lock-multiline t help-echo nil fontified t src-block t font-lock-fontified t))))
(setq ido-file-history '("build" "CMakeLists.txt" ".clang_complete" "." "settings.org" "main.cpp" "init.el" "settings.org" "main.cpp" "init.el" "settings.org" "main.cpp" "init.el" nil "settings.org" "init.el" "hw.cpp" ".clang_complete" "hw.cpp" "examples.desktop" "settings.org" "hw.cpp" ".clang_complete" "hw.cpp" "settings.org" ".clang_complete" "hw.cpp" "init.el" "settings.org" ".clang_complete" "hw.cpp" "settings.org" "init.el" "hw.cpp" "someheader.h" "hw.cpp" "CMakeLists.txt" "hw.cpp" "main.cpp" "settings.org" "init.el" "main.cpp" "settings.org" "emacs.d-master.zip" "settings.org" "init.el" "settings.org" "init.el" "settings.org" "init.el" "." "settings.org" "emacs.d-master.zip" "init.el" "settings.org" "emacs.d-master.zip" "settings.org"))
(setq ido-buffer-history '("build" ".clang_complete" "main.cpp" "*Customize Group: Emacs*" "highlight-indent-guides-autoloads.el" "hw.cpp" ".clang_complete" ".clang_complete<build>" "main.cpp" "*Packages*" "*scratch*" "*Packages*" "init.el" "*scratch*" "init.el" "*scratch*"))
(setq extended-command-history '("eval-buffer" "package-list-packages" "eval-buffer"))
